<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper file: 실행 할 쿼리 문을 저장하는 파일. 테이블 하나당 한개씩 작성
namespace: 작업하는 테이블들을 구분해주기 위한 식별자 -->
<mapper namespace="customer">

<!-- 리절트 맵 정의 : select 한 후의 결과 처리를 위해 정의 해 놓음-->
   <resultMap id="CustomerResult"  type="Customer"><!-- customer vo 안에 꼭 디폴트 생성자가 필요하다!!!!! -->
     <result property="num" column="num"/>
     <result property="name" column="name"/>
     <result property="address" column="address"/>
   </resultMap>

  <select id="selectAll" resultMap="CustomerResult">
    select * from customer
  </select>

  <select id="selectOne" parameterType="java.lang.String" resultMap="CustomerResult">
    select * from customer where num = #{x}<!-- 파라메터가 하나면 파라메터 명을 아무거나 해줘도 된다. -->
  </select>
  
  <insert id="insert" parameterType="Customer">
  	insert into customer values(#{num}, #{name}, #{address})  <!-- 내부에서 getter 호출 -->
  </insert>
  
  <update id="update" parameterType="Customer">
  	update customer set address = #{address} where num = #{num}
  
  </update>
 
  <delete id="delete" parameterType="Customer">
  	delete from customer where num = #{num}
  
  </delete>

  <select id="findAddress" parameterType="string" resultMap="CustomerResult">
  	select * from customer where address = #{address}
  </select>
	<!-- 소문자 string 도 가능하다. java.lang.String 할 필요가 없다 별칭이 등록되어 있다. -->

</mapper>